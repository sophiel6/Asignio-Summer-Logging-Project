<!-- LogException Advanced Search page -->


@{
    ViewBag.Title = "AdvancedSearch";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

<h2>Log Exception - Advanced Search</h2>

<!-- Email, Timestamp, Message, Method Name, Source, Stack Trace, Important (both IsImportant? and who marked as important) -->
<!-- Email, Message, MethodName, Source, StackTrace - string search -->
<!-- Timestamp - enter a range of dates -->
<!-- Important - check box for IsImportant? and string search for user who marked as important -->
<!-- https://alexkuznetsov.wordpress.com/2013/05/08/asp-net-mvc-pass-dictionary-data-from-view-to-controller/ -->

<table id="SearchTable">
    <tr>
        <td>EmailAddress</td>
        <td>@Html.TextBox("EmailAddress")</td>
    </tr>
    <tr>
        <td>TimeStamp</td>
        <td>@Html.TextBox("TimeStamp")</td>
    </tr>
    <tr>
        <td>Message</td>
        <td>@Html.TextBox("Message")</td>
    </tr>
    <tr>
        <td>MethodName</td>
        <td>@Html.TextBox("MethodName")</td>
    </tr>
    <tr>
        <td>Source</td>
        <td>@Html.TextBox("Source")</td>
    </tr>
    <tr>
        <td>StackTrace</td>
        <td>@Html.TextBox("StackTrace")</td>
    </tr>
</table>
<input id="SendToControllerButton" type="button" value="Search" />


<script>
    $(document).ready(function () {

        $("#SendToControllerButton").click(function () {

            var data = {};

            //Collects the data from textboxes and adds it to the dictionary
            $("#SearchTable tr").each(function (index, item) {
                var tds = $(this).find("td");
                var textBoxTitle = $(tds).eq(0).text();
                var textboxValue = $(tds).eq(1).find("input").val();
                data["searchDictionary[" + index + "].Key"] = textBoxTitle;
                data["searchDictionary[" + index + "].Value"] = textboxValue;
            });
            debugger;
            //creating a form to submit the dictionary to IndexToo
            const form = document.createElement('form');
            form.method = 'post';
            form.action = '/LogException/IndexToo';

            for (const key in data) {
                if (data.hasOwnProperty(key)) {
                    const hiddenField = document.createElement('input');
                    hiddenField.type = 'hidden';
                    hiddenField.name = key;
                    hiddenField.value = data[key];

                    form.appendChild(hiddenField);
                }
            }
            document.body.appendChild(form);
            form.submit();
        });
    });

</script>